{"ast":null,"code":"import React,{createContext,useReducer}from'react';import{normalizeAttributes}from'../utilities/attributeUtils';import{ToastContainer,toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";export const CartContext=/*#__PURE__*/createContext({items:[],selectedAttributes:{},addItemToCart:()=>{},updateItemQuantity:()=>{},handleCheckboxChange:()=>{},allAttributesSelected:()=>false});function shoppingCartReducer(state,action){switch(action.type){case'ADD_ITEM':const updatedItems=[...state.items];const newSelectedAttributes=normalizeAttributes(action.payload.selectedAttributes);const existingCartItemIndex=updatedItems.findIndex(cartItem=>cartItem.id===action.payload.id&&JSON.stringify(normalizeAttributes(cartItem.selectedAttributes))===JSON.stringify(newSelectedAttributes));const existingCartItem=updatedItems[existingCartItemIndex];if(existingCartItem){const updatedItem={...existingCartItem,quantity:existingCartItem.quantity+1};updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems.push({id:action.payload.id,name:action.payload.name,price:action.payload.price,images:action.payload.images,attributes:action.payload.attributes,selectedAttributes:newSelectedAttributes,quantity:1});}return{...state,items:updatedItems};case'UPDATE_ITEM':const updatedItemsForUpdate=[...state.items];const newSelectedAttributesForUpdate=normalizeAttributes(action.payload.selectedAttributes);const existingItemIndexForUpdate=updatedItemsForUpdate.findIndex(item=>item.id===action.payload.productId&&JSON.stringify(normalizeAttributes(item.selectedAttributes))===JSON.stringify(newSelectedAttributesForUpdate));const existingItemForUpdate=updatedItemsForUpdate[existingItemIndexForUpdate];if(existingItemForUpdate){const updatedItemForUpdate={...existingItemForUpdate,quantity:existingItemForUpdate.quantity+action.payload.amount};if(updatedItemForUpdate.quantity<=0){updatedItemsForUpdate.splice(existingItemIndexForUpdate,1);}else{updatedItemsForUpdate[existingItemIndexForUpdate]=updatedItemForUpdate;}}return{...state,items:updatedItemsForUpdate};case'SET_SELECTED_ATTRIBUTES':return{...state,selectedAttributes:{...state.selectedAttributes,[action.payload.setName]:action.payload.attrId}};case'RESET_SELECTED_ATTRIBUTES':return{...state,selectedAttributes:{}};case'CLEAR_CART':return{...state,items:[]};default:return state;}}export default function CartContextProvider(_ref){let{children}=_ref;const[shoppingCartState,shoppingCartDispatch]=useReducer(shoppingCartReducer,{items:[],selectedAttributes:{}});function handleAddItemToCart(product,selectedAttributes){shoppingCartDispatch({type:'ADD_ITEM',payload:{...product,selectedAttributes}});shoppingCartDispatch({type:'RESET_SELECTED_ATTRIBUTES'});toast.success(\"Item added to cart!\",{position:\"top-center\",autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}function handleUpdateCartItemQuantity(productId,selectedAttributes,amount){shoppingCartDispatch({type:'UPDATE_ITEM',payload:{productId,selectedAttributes,amount}});}function handleCheckboxChange(setName,attrId){shoppingCartDispatch({type:'SET_SELECTED_ATTRIBUTES',payload:{setName,attrId}});}function allAttributesSelected(groupedAttributes){return Object.keys(groupedAttributes).every(setName=>shoppingCartState.selectedAttributes[setName]);}function clearCart(){shoppingCartDispatch({type:'CLEAR_CART'});}const ctxValue={items:shoppingCartState.items,selectedAttributes:shoppingCartState.selectedAttributes,addItemToCart:handleAddItemToCart,updateItemQuantity:handleUpdateCartItemQuantity,handleCheckboxChange:handleCheckboxChange,allAttributesSelected:allAttributesSelected,clearCart:clearCart};return/*#__PURE__*/_jsx(CartContext.Provider,{value:ctxValue,children:children});}","map":{"version":3,"names":["React","createContext","useReducer","normalizeAttributes","ToastContainer","toast","jsx","_jsx","CartContext","items","selectedAttributes","addItemToCart","updateItemQuantity","handleCheckboxChange","allAttributesSelected","shoppingCartReducer","state","action","type","updatedItems","newSelectedAttributes","payload","existingCartItemIndex","findIndex","cartItem","id","JSON","stringify","existingCartItem","updatedItem","quantity","push","name","price","images","attributes","updatedItemsForUpdate","newSelectedAttributesForUpdate","existingItemIndexForUpdate","item","productId","existingItemForUpdate","updatedItemForUpdate","amount","splice","setName","attrId","CartContextProvider","_ref","children","shoppingCartState","shoppingCartDispatch","handleAddItemToCart","product","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleUpdateCartItemQuantity","groupedAttributes","Object","keys","every","clearCart","ctxValue","Provider","value"],"sources":["C:/xampp/htdocs/ecommerce/frontend/src/store/shopping-cart-context.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport { normalizeAttributes } from '../utilities/attributeUtils';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport const CartContext = createContext({\r\n  items: [],\r\n  selectedAttributes: {},\r\n  addItemToCart: () => {},\r\n  updateItemQuantity: () => {},\r\n  handleCheckboxChange: () => {},\r\n  allAttributesSelected: () => false,\r\n});\r\n\r\nfunction shoppingCartReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      const updatedItems = [...state.items];\r\n      const newSelectedAttributes = normalizeAttributes(action.payload.selectedAttributes);\r\n\r\n      const existingCartItemIndex = updatedItems.findIndex(\r\n        (cartItem) =>\r\n          cartItem.id === action.payload.id &&\r\n          JSON.stringify(normalizeAttributes(cartItem.selectedAttributes)) === JSON.stringify(newSelectedAttributes)\r\n      );\r\n      const existingCartItem = updatedItems[existingCartItemIndex];\r\n\r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          quantity: existingCartItem.quantity + 1,\r\n        };\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems.push({\r\n          id: action.payload.id,\r\n          name: action.payload.name,\r\n          price: action.payload.price,\r\n          images: action.payload.images,\r\n          attributes: action.payload.attributes,\r\n          selectedAttributes: newSelectedAttributes,\r\n          quantity: 1,\r\n        });\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items: updatedItems,\r\n      };\r\n\r\n    case 'UPDATE_ITEM':\r\n      const updatedItemsForUpdate = [...state.items];\r\n      const newSelectedAttributesForUpdate = normalizeAttributes(action.payload.selectedAttributes);\r\n\r\n      const existingItemIndexForUpdate = updatedItemsForUpdate.findIndex(\r\n        (item) =>\r\n          item.id === action.payload.productId &&\r\n          JSON.stringify(normalizeAttributes(item.selectedAttributes)) === JSON.stringify(newSelectedAttributesForUpdate)\r\n      );\r\n      const existingItemForUpdate = updatedItemsForUpdate[existingItemIndexForUpdate];\r\n\r\n      if (existingItemForUpdate) {\r\n        const updatedItemForUpdate = {\r\n          ...existingItemForUpdate,\r\n          quantity: existingItemForUpdate.quantity + action.payload.amount,\r\n        };\r\n\r\n        if (updatedItemForUpdate.quantity <= 0) {\r\n          updatedItemsForUpdate.splice(existingItemIndexForUpdate, 1);\r\n        } else {\r\n          updatedItemsForUpdate[existingItemIndexForUpdate] = updatedItemForUpdate;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items: updatedItemsForUpdate,\r\n      };\r\n\r\n    case 'SET_SELECTED_ATTRIBUTES':\r\n      return {\r\n        ...state,\r\n        selectedAttributes: {\r\n          ...state.selectedAttributes,\r\n          [action.payload.setName]: action.payload.attrId,\r\n        },\r\n      };\r\n\r\n    case 'RESET_SELECTED_ATTRIBUTES':\r\n      return {\r\n        ...state,\r\n        selectedAttributes: {},\r\n      };\r\n\r\n    case 'CLEAR_CART':\r\n      return {\r\n        ...state,\r\n        items: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default function CartContextProvider({ children }) {\r\n  const [shoppingCartState, shoppingCartDispatch] = useReducer(shoppingCartReducer, {\r\n    items: [],\r\n    selectedAttributes: {},\r\n  });\r\n\r\n  function handleAddItemToCart(product, selectedAttributes) {\r\n    shoppingCartDispatch({\r\n      type: 'ADD_ITEM',\r\n      payload: {\r\n        ...product,\r\n        selectedAttributes,\r\n      },\r\n    });\r\n    shoppingCartDispatch({\r\n      type: 'RESET_SELECTED_ATTRIBUTES',\r\n    });\r\n    toast.success(\"Item added to cart!\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n\r\n  function handleUpdateCartItemQuantity(productId, selectedAttributes, amount) {\r\n    shoppingCartDispatch({\r\n      type: 'UPDATE_ITEM',\r\n      payload: {\r\n        productId,\r\n        selectedAttributes,\r\n        amount,\r\n      },\r\n    });\r\n  }\r\n\r\n  function handleCheckboxChange(setName, attrId) {\r\n    shoppingCartDispatch({\r\n      type: 'SET_SELECTED_ATTRIBUTES',\r\n      payload: {\r\n        setName,\r\n        attrId,\r\n      },\r\n    });\r\n  }\r\n\r\n  function allAttributesSelected(groupedAttributes) {\r\n    return Object.keys(groupedAttributes).every(\r\n      (setName) => shoppingCartState.selectedAttributes[setName]\r\n    );\r\n  }\r\n\r\n  function clearCart() {\r\n    shoppingCartDispatch({ type: 'CLEAR_CART' });\r\n  }\r\n\r\n  const ctxValue = {\r\n    items: shoppingCartState.items,\r\n    selectedAttributes: shoppingCartState.selectedAttributes,\r\n    addItemToCart: handleAddItemToCart,\r\n    updateItemQuantity: handleUpdateCartItemQuantity,\r\n    handleCheckboxChange: handleCheckboxChange,\r\n    allAttributesSelected: allAttributesSelected,\r\n    clearCart: clearCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={ctxValue}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}