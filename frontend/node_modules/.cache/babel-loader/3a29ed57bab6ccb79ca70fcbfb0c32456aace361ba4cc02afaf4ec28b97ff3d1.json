{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ecommerce\\\\frontend\\\\src\\\\components\\\\Product.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CartContext } from \"../store/shopping-cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Product({\n  product\n}) {\n  _s();\n  const [selectedAttributes, setSelectedAttributes] = useState({});\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to group attributes by their set\n  function groupAttributesBySet(attributes) {\n    return attributes.reduce((acc, attribute) => {\n      const setName = attribute.attribute_set.name;\n      if (!acc[setName]) {\n        acc[setName] = [];\n      }\n      acc[setName].push(attribute);\n      return acc;\n    }, {});\n  }\n  const groupedAttributes = groupAttributesBySet(product.attributes);\n  const handleCheckboxChange = (setName, attrId) => {\n    setSelectedAttributes(prevState => ({\n      ...prevState,\n      [setName]: attrId\n    }));\n  };\n  const allAttributesSelected = () => {\n    return Object.keys(groupedAttributes).every(setName => selectedAttributes[setName]);\n  };\n  const {\n    addItemToCart\n  } = useContext(CartContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-images\",\n        children: product.images && product.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.image_url,\n          alt: `${product.name} ${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.images[0].image_url,\n          alt: `${product.name} main`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: product.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), Object.entries(groupedAttributes).map(([setName, attributes]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attribute-set\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"attribute-set-name\",\n          children: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attributes\",\n          children: attributes.map(attr => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attribute\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `inner-attribute ${selectedAttributes[setName] === attr.id ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedAttributes[setName] === attr.id,\n                onChange: () => handleCheckboxChange(setName, attr.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), attr.display_value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, attr.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, setName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"price\",\n        children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [product.price.currency.symbol, product.price.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !allAttributesSelected(),\n        onClick: () => addItemToCart(product.id),\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Product, \"LLXWb4pYmGczsRSVCLOVqYLt68o=\");\n_c = Product;\n;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","CartContext","jsxDEV","_jsxDEV","Product","product","_s","selectedAttributes","setSelectedAttributes","children","fileName","_jsxFileName","lineNumber","columnNumber","groupAttributesBySet","attributes","reduce","acc","attribute","setName","attribute_set","name","push","groupedAttributes","handleCheckboxChange","attrId","prevState","allAttributesSelected","Object","keys","every","addItemToCart","useContext","id","className","images","map","image","index","src","image_url","alt","dangerouslySetInnerHTML","__html","description","entries","attr","type","checked","onChange","display_value","price","currency","symbol","amount","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ecommerce/frontend/src/components/Product.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { CartContext } from \"../store/shopping-cart-context\";\r\n\r\nexport default function Product({ product }) {\r\n  const [selectedAttributes, setSelectedAttributes] = useState({});\r\n\r\n  if (!product) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Function to group attributes by their set\r\n  function groupAttributesBySet(attributes) {\r\n    return attributes.reduce((acc, attribute) => {\r\n      const setName = attribute.attribute_set.name;\r\n      if (!acc[setName]) {\r\n        acc[setName] = [];\r\n      }\r\n      acc[setName].push(attribute);\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  const groupedAttributes = groupAttributesBySet(product.attributes);\r\n\r\n  const handleCheckboxChange = (setName, attrId) => {\r\n    setSelectedAttributes(prevState => ({\r\n      ...prevState,\r\n      [setName]: attrId\r\n    }));\r\n  };\r\n\r\n  const allAttributesSelected = () => {\r\n    return Object.keys(groupedAttributes).every(setName => selectedAttributes[setName]);\r\n  };\r\n\r\n  const { addItemToCart } = useContext(CartContext);\r\n\r\n  return (\r\n    <div id=\"product\">\r\n      <div className=\"gallery\">\r\n        <div className=\"all-images\">\r\n          {product.images && product.images.map((image, index) => (\r\n            <img key={index} src={image.image_url} alt={`${product.name} ${index + 1}`} />\r\n          ))}\r\n        </div>\r\n        <div className=\"main-image\">\r\n          <img src={product.images[0].image_url} alt={`${product.name} main`} />\r\n        </div>\r\n      </div>\r\n      <div className=\"other-details\">\r\n        <h3>{product.name}</h3>\r\n        <div dangerouslySetInnerHTML={{ __html: product.description }} />\r\n        {Object.entries(groupedAttributes).map(([setName, attributes]) => (\r\n          <div className=\"attribute-set\" key={setName}>\r\n            <h3 className=\"attribute-set-name\">{setName}</h3>\r\n            <div className=\"attributes\">\r\n              {attributes.map(attr => (\r\n                <div\r\n                  key={attr.id}\r\n                  className=\"attribute\"\r\n                >\r\n                  <label className={`inner-attribute ${selectedAttributes[setName] === attr.id ? 'selected' : ''}`}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedAttributes[setName] === attr.id}\r\n                      onChange={() => handleCheckboxChange(setName, attr.id)}\r\n                    />\r\n                    {attr.display_value}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <p className=\"price\">Price: <br /><span>{product.price.currency.symbol}{product.price.amount}</span></p>\r\n        <button disabled={!allAttributesSelected()} onClick={() => addItemToCart(product.id)}>Add to cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}