{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ecommerce\\\\frontend\\\\src\\\\pages\\\\ProductDetailsPage.js\";\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport Product from '../components/Product';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_PRODUCT_DETAILS = gql`\n  query GetProductDetails($id: String!) {\n    product(id: $id) {\n      id\n      name\n      inStock\n      description\n      price {\n        amount\n        currency {\n          symbol\n        }\n      }\n      images {\n        image_url\n      }\n      attributes {\n        id\n        value\n        display_value\n        attribute_set {\n            name\n        }\n      }\n    }\n  }\n`;\nclass ProductDetails extends Component {\n  render() {\n    const {\n      productId\n    } = this.props;\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_PRODUCT_DETAILS, {\n      variables: {\n        id: productId\n      }\n    });\n    if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this);\n    const {\n      product\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default ProductDetails;\n\n// const ProductDetails = () =>  {\n\n//     const { productId } = useParams();\n//     const { loading, error, data } = useQuery(GET_PRODUCT_DETAILS, {\n//         variables: { id: productId }\n//     });\n\n//     if (loading) return <div>Loading...</div>;\n//     if (error) return <div>Error: {error.message}</div>;\n\n//     const { product } = data;\n\n//     return (\n//         <>\n//             <Product product={product} />\n//         </>\n//     );\n// }\n\n// export default ProductDetails;","map":{"version":3,"names":["React","gql","useQuery","useParams","Product","jsxDEV","_jsxDEV","Fragment","_Fragment","GET_PRODUCT_DETAILS","ProductDetails","Component","render","productId","props","loading","error","data","variables","id","children","fileName","_jsxFileName","lineNumber","columnNumber","message","product"],"sources":["C:/xampp/htdocs/ecommerce/frontend/src/pages/ProductDetailsPage.js"],"sourcesContent":["import React from 'react';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Product from '../components/Product';\r\n\r\nconst GET_PRODUCT_DETAILS = gql`\r\n  query GetProductDetails($id: String!) {\r\n    product(id: $id) {\r\n      id\r\n      name\r\n      inStock\r\n      description\r\n      price {\r\n        amount\r\n        currency {\r\n          symbol\r\n        }\r\n      }\r\n      images {\r\n        image_url\r\n      }\r\n      attributes {\r\n        id\r\n        value\r\n        display_value\r\n        attribute_set {\r\n            name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ProductDetails extends Component  {\r\n  render () {\r\n    const { productId } = this.props;\r\n\r\n  \r\n    const { loading, error, data } = useQuery(GET_PRODUCT_DETAILS, {\r\n        variables: { id: productId }\r\n    });\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n\r\n    const { product } = data;\r\n\r\n    return (\r\n        <>\r\n            <Product product={product} />\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductDetails; \r\n\r\n// const ProductDetails = () =>  {\r\n\r\n//     const { productId } = useParams();\r\n//     const { loading, error, data } = useQuery(GET_PRODUCT_DETAILS, {\r\n//         variables: { id: productId }\r\n//     });\r\n\r\n//     if (loading) return <div>Loading...</div>;\r\n//     if (error) return <div>Error: {error.message}</div>;\r\n\r\n//     const { product } = data;\r\n\r\n//     return (\r\n//         <>\r\n//             <Product product={product} />\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default ProductDetails; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,mBAAmB,GAAGR,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMS,cAAc,SAASC,SAAS,CAAE;EACtCC,MAAMA,CAAA,EAAI;IACR,MAAM;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACC,KAAK;IAGhC,MAAM;MAAEC,OAAO;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGf,QAAQ,CAACO,mBAAmB,EAAE;MAC3DS,SAAS,EAAE;QAAEC,EAAE,EAAEN;MAAU;IAC/B,CAAC,CAAC;IAEF,IAAIE,OAAO,EAAE,oBAAOT,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IACzC,IAAIR,KAAK,EAAE,oBAAOV,OAAA;MAAAc,QAAA,GAAK,SAAO,EAACJ,KAAK,CAACS,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAEnD,MAAM;MAAEE;IAAQ,CAAC,GAAGT,IAAI;IAExB,oBACIX,OAAA,CAAAE,SAAA;MAAAY,QAAA,eACId,OAAA,CAACF,OAAO;QAACsB,OAAO,EAAEA;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBAC/B,CAAC;EAET;AACF;AAEA,eAAed,cAAc;;AAE7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}