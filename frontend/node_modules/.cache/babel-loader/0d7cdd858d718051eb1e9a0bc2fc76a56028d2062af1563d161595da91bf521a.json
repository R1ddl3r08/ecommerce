{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ecommerce\\\\frontend\\\\src\\\\pages\\\\ProductDetailsPage.js\";\nimport React, { Component } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport Product from '../components/Product';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_PRODUCT_DETAILS = gql`\n  query GetProductDetails($id: String!) {\n    product(id: $id) {\n      id\n      name\n      inStock\n      description\n      price {\n        amount\n        currency {\n          symbol\n        }\n      }\n      images {\n        image_url\n      }\n      attributes {\n        id\n        value\n        display_value\n        attribute_set {\n            name\n        }\n      }\n    }\n  }\n`;\nclass ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: null,\n      product: null\n    };\n  }\n  componentDidMount() {\n    const {\n      productId\n    } = useParams();\n    // Fetch data using Apollo useQuery hook\n    useQuery(GET_PRODUCT_DETAILS, {\n      variables: {\n        id: productId\n      },\n      onCompleted: data => {\n        this.setState({\n          loading: false,\n          product: data.product\n        });\n      },\n      onError: error => {\n        this.setState({\n          loading: false,\n          error\n        });\n      }\n    });\n  }\n  render() {\n    const {\n      loading,\n      error,\n      product\n    } = this.state;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default ProductDetails;","map":{"version":3,"names":["React","Component","gql","useQuery","useParams","Product","jsxDEV","_jsxDEV","Fragment","_Fragment","GET_PRODUCT_DETAILS","ProductDetails","constructor","props","state","loading","error","product","componentDidMount","productId","variables","id","onCompleted","data","setState","onError","render","children","fileName","_jsxFileName","lineNumber","columnNumber","message"],"sources":["C:/xampp/htdocs/ecommerce/frontend/src/pages/ProductDetailsPage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Product from '../components/Product';\r\n\r\nconst GET_PRODUCT_DETAILS = gql`\r\n  query GetProductDetails($id: String!) {\r\n    product(id: $id) {\r\n      id\r\n      name\r\n      inStock\r\n      description\r\n      price {\r\n        amount\r\n        currency {\r\n          symbol\r\n        }\r\n      }\r\n      images {\r\n        image_url\r\n      }\r\n      attributes {\r\n        id\r\n        value\r\n        display_value\r\n        attribute_set {\r\n            name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ProductDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            error: null,\r\n            product: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { productId } = useParams();\r\n        // Fetch data using Apollo useQuery hook\r\n        useQuery(GET_PRODUCT_DETAILS, {\r\n            variables: { id: productId },\r\n            onCompleted: (data) => {\r\n                this.setState({ loading: false, product: data.product });\r\n            },\r\n            onError: (error) => {\r\n                this.setState({ loading: false, error });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { loading, error, product } = this.state;\r\n\r\n        if (loading) return <div>Loading...</div>;\r\n        if (error) return <div>Error: {error.message}</div>;\r\n\r\n        return (\r\n            <>\r\n                <Product product={product} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDetails;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,mBAAmB,GAAGR,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMS,cAAc,SAASV,SAAS,CAAC;EACnCW,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACb,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAEC;IAAU,CAAC,GAAGf,SAAS,CAAC,CAAC;IACjC;IACAD,QAAQ,CAACO,mBAAmB,EAAE;MAC1BU,SAAS,EAAE;QAAEC,EAAE,EAAEF;MAAU,CAAC;MAC5BG,WAAW,EAAGC,IAAI,IAAK;QACnB,IAAI,CAACC,QAAQ,CAAC;UAAET,OAAO,EAAE,KAAK;UAAEE,OAAO,EAAEM,IAAI,CAACN;QAAQ,CAAC,CAAC;MAC5D,CAAC;MACDQ,OAAO,EAAGT,KAAK,IAAK;QAChB,IAAI,CAACQ,QAAQ,CAAC;UAAET,OAAO,EAAE,KAAK;UAAEC;QAAM,CAAC,CAAC;MAC5C;IACJ,CAAC,CAAC;EACN;EAEAU,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEX,OAAO;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACH,KAAK;IAE9C,IAAIC,OAAO,EAAE,oBAAOR,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IACzC,IAAIf,KAAK,EAAE,oBAAOT,OAAA;MAAAoB,QAAA,GAAK,SAAO,EAACX,KAAK,CAACgB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAEnD,oBACIxB,OAAA,CAAAE,SAAA;MAAAkB,QAAA,eACIpB,OAAA,CAACF,OAAO;QAACY,OAAO,EAAEA;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBAC/B,CAAC;EAEX;AACJ;AAEA,eAAepB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}