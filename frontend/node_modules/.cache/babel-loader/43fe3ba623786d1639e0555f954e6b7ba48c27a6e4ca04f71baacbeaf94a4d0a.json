{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ecommerce\\\\frontend\\\\src\\\\store\\\\shopping-cart-context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  items: [],\n  addItemToCart: () => {},\n  updatedItemQuantity: () => {}\n});\nconst GET_PRODUCT_BY_ID = gql`\n  query GetProductById($id: String!) {\n    product(id: $id) {\n      id\n      name\n      inStock\n      description\n      price {\n        amount\n        currency {\n          symbol\n        }\n      }\n      images {\n        image_url\n      }\n      attributes {\n        id\n        value\n        display_value\n        attribute_set {\n            name\n        }\n      }\n    }\n  }\n`;\nfunction shoppingCartReducer(state, action) {\n  if (action.type === 'ADD_ITEM') {\n    const updatedItems = [...state.items];\n    const existingCartItemIndex = updatedItems.findIndex(cartItem => cartItem.id === action.payload.id);\n    const existingCartItem = updatedItems[existingCartItemIndex];\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        quantity: existingCartItem.quantity + 1\n      };\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id: action.payload.id,\n        name: action.payload.name,\n        price: action.payload.price,\n        images: action.payload.images,\n        attributes: action.payload.attributes,\n        quantity: 1\n      });\n    }\n    return {\n      ...state,\n      items: updatedItems\n    };\n  }\n  if (action.type === 'UPDATE_ITEM') {\n    const updatedItems = [...state.items];\n    const updatedItemIndex = updatedItems.findIndex(item => item.id === action.payload.productId);\n    const updatedItem = {\n      ...updatedItems[updatedItemIndex]\n    };\n    updatedItem.quantity += action.payload.amount;\n    if (updatedItem.quantity <= 0) {\n      updatedItems.splice(updatedItemIndex, 1);\n    } else {\n      updatedItems[updatedItemIndex] = updatedItem;\n    }\n    return {\n      ...state,\n      items: updatedItems\n    };\n  }\n  return state;\n}\nexport default function CartContextProvider({\n  children\n}) {\n  _s();\n  const [shoppingCartState, shoppingCartDispatch] = useReducer(shoppingCartReducer, {\n    items: []\n  });\n  const [fetchProduct] = useLazyQuery(GET_PRODUCT_BY_ID, {\n    onCompleted: data => {\n      shoppingCartDispatch({\n        type: 'ADD_ITEM',\n        payload: data.product\n      });\n    }\n  });\n  function handleAddItemToCart(id) {\n    fetchProduct({\n      variables: {\n        id\n      }\n    });\n  }\n  function handleUpdateCartItemQuantity(productId, amount) {\n    shoppingCartDispatch({\n      type: 'UPDATE_ITEM',\n      payload: {\n        productId,\n        amount\n      }\n    });\n  }\n  const ctxValue = {\n    items: shoppingCartState.items,\n    addItemToCart: handleAddItemToCart,\n    updatedItemQuantity: handleUpdateCartItemQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: ctxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(CartContextProvider, \"wbwPp5kN6fGaKoLpbfiunfcWIBs=\", false, function () {\n  return [useLazyQuery];\n});\n_c = CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["createContext","useReducer","gql","useLazyQuery","jsxDEV","_jsxDEV","CartContext","items","addItemToCart","updatedItemQuantity","GET_PRODUCT_BY_ID","shoppingCartReducer","state","action","type","updatedItems","existingCartItemIndex","findIndex","cartItem","id","payload","existingCartItem","updatedItem","quantity","push","name","price","images","attributes","updatedItemIndex","item","productId","amount","splice","CartContextProvider","children","_s","shoppingCartState","shoppingCartDispatch","fetchProduct","onCompleted","data","product","handleAddItemToCart","variables","handleUpdateCartItemQuantity","ctxValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ecommerce/frontend/src/store/shopping-cart-context.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\r\nimport { gql, useLazyQuery } from '@apollo/client';\r\n\r\nexport const CartContext = createContext({\r\n  items: [],\r\n  addItemToCart: () => {},\r\n  updatedItemQuantity: () => {},\r\n});\r\n\r\nconst GET_PRODUCT_BY_ID = gql`\r\n  query GetProductById($id: String!) {\r\n    product(id: $id) {\r\n      id\r\n      name\r\n      inStock\r\n      description\r\n      price {\r\n        amount\r\n        currency {\r\n          symbol\r\n        }\r\n      }\r\n      images {\r\n        image_url\r\n      }\r\n      attributes {\r\n        id\r\n        value\r\n        display_value\r\n        attribute_set {\r\n            name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction shoppingCartReducer(state, action) {\r\n  if (action.type === 'ADD_ITEM') {\r\n    const updatedItems = [...state.items];\r\n\r\n    const existingCartItemIndex = updatedItems.findIndex(\r\n      (cartItem) => cartItem.id === action.payload.id\r\n    );\r\n    const existingCartItem = updatedItems[existingCartItemIndex];\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        quantity: existingCartItem.quantity + 1,\r\n      };\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems.push({\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        price: action.payload.price,\r\n        images: action.payload.images,\r\n        attributes: action.payload.attributes,\r\n        quantity: 1,\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      items: updatedItems,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'UPDATE_ITEM') {\r\n    const updatedItems = [...state.items];\r\n    const updatedItemIndex = updatedItems.findIndex(\r\n      (item) => item.id === action.payload.productId\r\n    );\r\n\r\n    const updatedItem = {\r\n      ...updatedItems[updatedItemIndex],\r\n    };\r\n\r\n    updatedItem.quantity += action.payload.amount;\r\n\r\n    if (updatedItem.quantity <= 0) {\r\n      updatedItems.splice(updatedItemIndex, 1);\r\n    } else {\r\n      updatedItems[updatedItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      items: updatedItems,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default function CartContextProvider({ children }) {\r\n  const [shoppingCartState, shoppingCartDispatch] = useReducer(shoppingCartReducer, {\r\n    items: [],\r\n  });\r\n\r\n  const [fetchProduct] = useLazyQuery(GET_PRODUCT_BY_ID, {\r\n    onCompleted: (data) => {\r\n      shoppingCartDispatch({\r\n        type: 'ADD_ITEM',\r\n        payload: data.product,\r\n      });\r\n    },\r\n  });\r\n\r\n  function handleAddItemToCart(id) {\r\n    fetchProduct({ variables: { id } });\r\n  }\r\n\r\n  function handleUpdateCartItemQuantity(productId, amount) {\r\n    shoppingCartDispatch({\r\n      type: 'UPDATE_ITEM',\r\n      payload: {\r\n        productId,\r\n        amount,\r\n      },\r\n    });\r\n  }\r\n\r\n  const ctxValue = {\r\n    items: shoppingCartState.items,\r\n    addItemToCart: handleAddItemToCart,\r\n    updatedItemQuantity: handleUpdateCartItemQuantity,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={ctxValue}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}