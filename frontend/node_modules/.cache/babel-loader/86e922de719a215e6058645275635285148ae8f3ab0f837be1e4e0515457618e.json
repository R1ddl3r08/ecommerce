{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ecommerce\\\\frontend\\\\src\\\\components\\\\AttributeSet.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AttributeSet extends Component {\n  render() {\n    const {\n      setName,\n      attributes,\n      selectedAttributes,\n      handleCheckboxChange\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-set\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"attribute-set-name\",\n        children: setName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes\",\n        children: attributes.map(attr => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attribute\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `inner-attribute ${selectedAttributes[setName] === attr.id ? 'selected' : ''}`,\n            style: setName === 'Color' ? {\n              backgroundColor: attr.value\n            } : {},\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleCheckboxChange(setName, attr.id),\n              checked: selectedAttributes[setName] === attr.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), setName !== 'Color' && attr.display_value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this)\n        }, attr.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, setName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AttributeSet;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","AttributeSet","render","setName","attributes","selectedAttributes","handleCheckboxChange","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","attr","id","style","backgroundColor","value","type","onChange","checked","display_value"],"sources":["C:/xampp/htdocs/ecommerce/frontend/src/components/AttributeSet.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AttributeSet extends Component {\r\n  render() {\r\n    const { setName, attributes, selectedAttributes, handleCheckboxChange } = this.props;\r\n\r\n    return (\r\n      <div className=\"attribute-set\" key={setName}>\r\n        <h3 className=\"attribute-set-name\">{setName}</h3>\r\n        <div className=\"attributes\">\r\n          {attributes.map(attr => (\r\n            <div key={attr.id} className=\"attribute\">\r\n              <label\r\n                className={`inner-attribute ${selectedAttributes[setName] === attr.id ? 'selected' : ''}`}\r\n                style={setName === 'Color' ? { backgroundColor: attr.value } : {}}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={() => handleCheckboxChange(setName, attr.id)}\r\n                  checked={selectedAttributes[setName] === attr.id}\r\n                />\r\n                {setName !== 'Color' && attr.display_value}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttributeSet;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,SAASH,SAAS,CAAC;EACnCI,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,OAAO;MAAEC,UAAU;MAAEC,kBAAkB;MAAEC;IAAqB,CAAC,GAAG,IAAI,CAACC,KAAK;IAEpF,oBACEP,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BT,OAAA;QAAIQ,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEN;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDb,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBL,UAAU,CAACU,GAAG,CAACC,IAAI,iBAClBf,OAAA;UAAmBQ,SAAS,EAAC,WAAW;UAAAC,QAAA,eACtCT,OAAA;YACEQ,SAAS,EAAE,mBAAmBH,kBAAkB,CAACF,OAAO,CAAC,KAAKY,IAAI,CAACC,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;YAC1FC,KAAK,EAAEd,OAAO,KAAK,OAAO,GAAG;cAAEe,eAAe,EAAEH,IAAI,CAACI;YAAM,CAAC,GAAG,CAAC,CAAE;YAAAV,QAAA,gBAElET,OAAA;cACEoB,IAAI,EAAC,UAAU;cACfC,QAAQ,EAAEA,CAAA,KAAMf,oBAAoB,CAACH,OAAO,EAAEY,IAAI,CAACC,EAAE,CAAE;cACvDM,OAAO,EAAEjB,kBAAkB,CAACF,OAAO,CAAC,KAAKY,IAAI,CAACC;YAAG;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,EACDV,OAAO,KAAK,OAAO,IAAIY,IAAI,CAACQ,aAAa;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC,GAXAE,IAAI,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAlB4BV,OAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBtC,CAAC;EAEV;AACF;AAEA,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}